// Code generated by ogen, DO NOT EDIT.

package v1

import (
	"net/http"

	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/ogenregex"
)

var regexMap = map[string]ogenregex.Regexp{
	"^(([0-1][0-9]|2[0-3]):(00|15|30|45))$":                             ogenregex.MustCompile("^(([0-1][0-9]|2[0-3]):(00|15|30|45))$"),
	"^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$":                                  ogenregex.MustCompile("^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"),
	"^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}(?:/(?:[0-9]|[1-2][0-9]|3[0-2]))?$": ogenregex.MustCompile("^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}(?:/(?:[0-9]|[1-2][0-9]|3[0-2]))?$"),
	"^(nfs://[0-9\\.]+/[A-Za-z0-9_\\-\\/]+)$":                           ogenregex.MustCompile("^(nfs://[0-9\\.]+/[A-Za-z0-9_\\-\\/]+)$"),
	"^[^\\s\\u3000]+$":                                                  ogenregex.MustCompile("^[^\\s\\u3000]+$"),
	"^[a-zA-Z0-9-._]+$":                                                 ogenregex.MustCompile("^[a-zA-Z0-9-._]+$"),
	"^[a-z][a-z0-9_]{3,19}$":                                            ogenregex.MustCompile("^[a-z][a-z0-9_]{3,19}$"),
	"^\\d+\\.\\d+\\.\\d+$":                                              ogenregex.MustCompile("^\\d+\\.\\d+\\.\\d+$"),
}

type (
	optionFunc[C any] func(*C)
)

type clientConfig struct {
	Client ht.Client
}

// ClientOption is client config option.
type ClientOption interface {
	applyClient(*clientConfig)
}

var _ ClientOption = (optionFunc[clientConfig])(nil)

func (o optionFunc[C]) applyClient(c *C) {
	o(c)
}

func newClientConfig(opts ...ClientOption) clientConfig {
	cfg := clientConfig{
		Client: http.DefaultClient,
	}
	for _, opt := range opts {
		opt.applyClient(&cfg)
	}
	return cfg
}

type baseClient struct {
	cfg clientConfig
}

func (cfg clientConfig) baseClient() (c baseClient, err error) {
	c = baseClient{cfg: cfg}
	return c, nil
}

// Option is config option.
type Option interface {
	ClientOption
}

// WithClient specifies http client to use.
func WithClient(client ht.Client) ClientOption {
	return optionFunc[clientConfig](func(cfg *clientConfig) {
		if client != nil {
			cfg.Client = client
		}
	})
}
